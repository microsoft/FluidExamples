# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# FluidExamples build for CI and PR

pool:
  vmImage: ubuntu-latest

parameters:
  - name: angular-demo
    type: string
    default: angular-demo
  - name: audience-demo
    type: string
    default: audience-demo
  - name: brainstorm
    type: string
    default: brainstorm
  - name: collaborative-text-area
    type: string
    default: collaborative-text-area
  - name: multi-framework-diceroller
    type: string
    default: multi-framework-diceroller
  - name: react-demo
    type: string
    default: react-demo
  - name: node-demo
    type: string
    default: node-demo
  - name: react-starter-template
    type: string
    default: react-starter-template

schedules:
  - cron: "0 16 * * 1-5" # Runs daily builds at 9AM PST Mon-Fri
    displayName: Daily builds
    branches:
      include:
        - main
    always: true

trigger:
  - main

pr:
  - main

variables:
  skipComponentGovernanceDetection: true

steps:
  - task: ComponentGovernanceComponentDetection@0
    inputs:
      scanType: "Register"
      verbosity: "Verbose"
      alertWarningLevel: "High"

  - task: UseNode@1
    displayName: Use Node 16.x
    inputs:
      version: 16.x

  # Install, build, lint, and test each package
  - ${{ each parameter in parameters }}:
      - task: Npm@1
        displayName: Install - ${{ parameter.Value }}
        inputs:
          command: "custom"
          workingDir: "${{ parameter.Value }}"
          customCommand: "install"
      - task: Npm@1
        displayName: Build - ${{ parameter.Value }}
        inputs:
          command: "custom"
          workingDir: ${{ parameter.Value }}
          customCommand: "run build"
      - task: Npm@1
        displayName: Lint - ${{ parameter.Value }}
        inputs:
          command: "custom"
          workingDir: ${{ parameter.Value }}
          customCommand: "run lint"
      - task: Npm@1
        displayName: Test - ${{ parameter.Value }}
        inputs:
          command: "custom"
          workingDir: ${{ parameter.Value }}
          customCommand: "run ci:test"
      - task: PublishTestResults@2
        displayName: Publish Test Results - ${{ parameter.Value }}
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "**/*junit-report.xml"
          searchFolder: ${{ parameter.Value }}/nyc
          mergeTestResults: true
        condition: succeededOrFailed()
